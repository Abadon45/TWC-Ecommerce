"""
Django setting for TWC project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of setting and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

import os
from logging.handlers import RotatingFileHandler

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development setting - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)!a@6)s)$_u_o6*b7&#vqo++i)i5f^$_8nid!r0w^wm3#w47$y'
RESPONSE_TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1ODgwNTQ4OCwiaWF0IjoxNzI3MjY5NDg4LCJqdGkiOiI4OGVlMTdiYTk4NTY0ZmVmYjhlMjM5OTkwNzBjNDFhNiIsInVzZXJfaWQiOjN9.eVRz2OMpyigJ6qKPm1xVQI99T3Pxc4yTx2PK2uBhsMw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = ['*', ]

USE_X_FORWARDED_HOST = True

SITE_ID = 1

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'django_celery_results',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'user',
    'TWC',
    'onlinestore',
    'cart',
    'django_hosts',
    'django.contrib.sites',
]

SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
    },
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
    }
}

MIDDLEWARE = [
    'django_hosts.middleware.HostsRequestMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'TWC.middleware.SubdomainMiddleware',
    'django_hosts.middleware.HostsResponseMiddleware',
    'TWC.middleware.RedirectToWWW',
]

AUTH_USER_MODEL = 'user.User'

ROOT_URLCONF = 'TWC.urls'
ROOT_HOSTCONF = 'TWC.hosts'
DEFAULT_HOST = 'wildcard'
PARENT_HOST = 'twconline.store'
SITE_DOMAIN = 'twconline.store'
CSRF_TRUSTED_ORIGINS = ['https://www.twconline.store', 'https://www.twcstoredevtest.com']
CORS_ALLOWED_ORIGINS = [
    "https://www.twconline.store",
    "http://localhost:8000",
    "https://www.twcstoredevtest.com",
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'onlinestore', 'templates'),
            os.path.join(BASE_DIR, 'templates', 'allauth'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'onlinestore.context_processors.referrer',
                'onlinestore.context_processors.cart_items',
                'TWC.context_processors.main_site_url',
                'TWC.context_processors.site_urls',
            ],
        },
    },
]

ACCOUNT_CONTEXT_PROCESSORS = [
    'django.template.context_processors.request',
]

WSGI_APPLICATION = 'TWC.wsgi.application'

# Database
POSTGRES_DB = os.environ.get("POSTGRES_DB", 'twcmart')
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD", 'VjIT0hyTEzHSwV-yEpGh-l7uNoieqZ-YhapAj4Qf2r4')
POSTGRES_USER = os.environ.get("POSTGRES_USER", 'twcdev')
POSTGRES_HOST = os.environ.get("POSTGRES_HOST", '172.104.160.121')
POSTGRES_PORT = os.environ.get("POSTGRES_PORT", "5432")

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': POSTGRES_DB,
        'USER': POSTGRES_USER,
        'PASSWORD': POSTGRES_PASSWORD,
        'HOST': POSTGRES_HOST,
        'PORT': POSTGRES_PORT,
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR / "static"),)
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR / 'media')

# CElERY SETTINGS
CELERY_BROKER_URL = 'redis://172.234.49.190:6379'
CELERY_RESULT_BACKEND = 'redis://172.234.49.190:6379'

broker_connection_retry_on_startup = True

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_TIMEZONE = TIME_ZONE

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# SENDGRID EMAIL

SENDGRID_API_KEY = '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'
username = 'ZXZnZXJvbmlsbGE='
password = 'dmVuZGljczIwMTU='

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_MAIN = 'TWCAKO <support@twcako.com>'
EMAIL_HOST_PASSWORD = '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'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = EMAIL_MAIN
SERVER_EMAIL = EMAIL_MAIN

ACCOUNT_EMAIL_TEMPLATE_PASSWORD_RESET = 'login/password_reset_email.html'

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 60 * 60 * 24 * 14
SESSION_COOKIE_SECURE = False
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

if os.environ.get('CURRENT_DOMAIN') == 'twconline.store':
    SESSION_COOKIE_DOMAIN = 'twconline.store'
    DOMAIN_NAME = 'twconline.store'
elif os.environ.get('CURRENT_DOMAIN') == 'www.twcstoredevtest.com':
    SESSION_COOKIE_DOMAIN = 'www.twcstoredevtest.com'
    DOMAIN_NAME = 'twcstoredevtest.com'
else:
    SESSION_COOKIE_DOMAIN = None

SESSION_COOKIE_NAME = "twccookie"
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_DOMAIN = SESSION_COOKIE_DOMAIN

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = [
    "http://localhost:8000",
    "*.twconline.store",
    "https://www.twcstoredevtest.com",
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'error_file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'TWC', 'logs', 'error.log'),
            'maxBytes': 1024 * 1024,  # 1 MB
            'backupCount': 5,
        },
    },
    'root': {
        'handlers': ['error_file'],
        'level': 'ERROR',
    },
}

# Application definition
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
